{"version":3,"sources":["actions/types.js","actions/auth.js","components/Navbar.js","hocs/Layout.js","containers/Home.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","RESET_PASSWORD_CONFIRM_SUCCESS","RESET_PASSWORD_CONFIRM_FAIL","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","console","log","connect","state","isAuthenticated","auth","logout","useState","redirect","setRedirect","logout_handler","className","to","id","href","onClick","checkAuthenticated","body","JSON","stringify","token","post","code","googleAuthenticate","details","formBody","Object","keys","map","key","encodeURIComponent","join","props","location","useLocation","useEffect","values","queryString","parse","search","children","Home","class","role","login","email","password","formData","setFormData","onChange","e","target","name","value","continueWithGoogle","window","replace","authorization_url","alert","onSubmit","preventDefault","placeholder","required","minLength","signup","first_name","last_name","re_password","submitted","setSubmitted","verify","uid","match","style","marginTop","params","reset_password","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b151e479.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\r\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\r\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\r\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    LOGOUT\r\n} from \"./types\";\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if(localStorage.getItem('access')){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept':'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`,config)\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n        } catch(err){\r\n            console.log(err);\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    }else{\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const googleAuthenticate = ( state, code ) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        }\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try{\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config)\r\n\r\n            dispatch({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload: res.data\r\n            })\r\n\r\n            dispatch(load_user())\r\n        }catch(err){\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') })\r\n\r\n        try{\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,body,config)\r\n            \r\n            if (res.data.code !== \"token_not_valid\") {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n\r\n        } catch(err){\r\n            console.log(err);\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(load_user())\r\n\r\n    } catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config)\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS\r\n        });\r\n\r\n    } catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS\r\n        });\r\n\r\n    } catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS\r\n        });\r\n\r\n    } catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS\r\n        });\r\n\r\n    } catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","import React, { Fragment, useState } from 'react'\r\nimport {Link,Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../actions/auth';\r\n\r\nconst Navbar = ({isAuthenticated, logout}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const logout_handler = () => {\r\n        logout();\r\n        setRedirect(true);\r\n    };\r\n\r\n\r\n    const guestLinks = () => {\r\n        return(\r\n            <Fragment>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/login'>Login</Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/signup'>Sign Up</Link>\r\n                </li>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const authLinks = () => {\r\n        return(\r\n            <li className='nav-item'>\r\n                <a href=\"#!\" className='nav-link' onClick={logout_handler}>Logout</a>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n                    <Link className='navbar-brand' to='/'>Auth System</Link>\r\n                    <div className='collapse navbar-collapse' id='navbarNav'>\r\n                        <ul className='navbar-nav'>\r\n                            <li className='nav-item active'>\r\n                                <Link className='nav-link' to='/'>Home</Link>\r\n                            </li>\r\n                            {isAuthenticated ? authLinks() : guestLinks()}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps,{logout})(Navbar);\r\n","import React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport { checkAuthenticated , load_user, googleAuthenticate } from '../actions/auth'\r\nimport queryString from 'query-string';\r\n\r\nconst Layout = (props) => {\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        console.log('state' + state)\r\n        console.log('code' + code)\r\n\r\n        if (state && code) {\r\n            props.googleAuthenticate(state, code);\r\n        }else{\r\n            props.checkAuthenticated();\r\n            props.load_user();\r\n        }\r\n\r\n    }, [location])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { checkAuthenticated, load_user, googleAuthenticate })(Layout);","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='container'>\r\n            <div class='jumbotron mt-5'>\r\n                <h1 class='display-4'>Welcome to Auth System!</h1>\r\n                <p class='lead'>This is an incredible authentication system with production level features!</p>\r\n                <hr class='my-4' />\r\n                <p>Click the Log In button</p>\r\n                <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport './Login.css'\r\nimport {login} from '../actions/auth';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({login , isAuthenticated}) => {\r\n\r\n    const [formData , setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name] : e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        login(email, password);\r\n    }\r\n\r\n    const continueWithGoogle = async () => {\r\n        try{\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`)\r\n\r\n            window.location.replace(res.data.authorization_url);\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const continueWithFacebook = () => {\r\n        \r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return(\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-2' type='submit'>Login</button>\r\n            </form>\r\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\r\n                Continue With Google\r\n            </button>\r\n            <br />\r\n            <button className='btn btn-primary mt-3' onClick={continueWithFacebook}>\r\n                Continue With Facebook\r\n            </button>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {signup} from '../actions/auth';\r\nimport axios from 'axios';\r\n\r\nconst Signup = ({signup , isAuthenticated}) => {\r\n    const [submitted, setSubmitted] = useState(false)\r\n\r\n    const [formData , setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    })\r\n\r\n    const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name] : e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(password===re_password){\r\n            signup(first_name, last_name, email, password, re_password);\r\n            setSubmitted(true);\r\n        }else{\r\n            alert(\"Password not same\")\r\n        }\r\n    }\r\n\r\n    const continueWithGoogle = async () => {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}`)\r\n\r\n        window.location.replace(res.data.authorization_url);\r\n    }\r\n\r\n    const continueWithFacebook = () => {\r\n        \r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return(\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    if (submitted) {\r\n        return(\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create a new Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='First Name'\r\n                        name='first_name'\r\n                        value={first_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Last Name'\r\n                        name='last_name'\r\n                        value={last_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-2' type='submit'>Register</button>\r\n            </form>\r\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\r\n                Continue With Google\r\n            </button>\r\n            <br />\r\n            <button className='btn btn-primary mt-3' onClick={continueWithFacebook}>\r\n                Continue With Facebook\r\n            </button>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Login</Link>\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {verify} from '../actions/auth';\r\n\r\nconst Activate = ({verify , match}) => {\r\n    const [submitted, setSubmitted] = useState(false)\r\n\r\n    const verify_account = e => {\r\n        e.preventDefault();\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setSubmitted(true);\r\n    }\r\n\r\n    if (submitted) {\r\n        return(\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {reset_password} from '../actions/auth';\r\n\r\nconst ResetPassword = ({reset_password}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const [formData , setFormData] = useState({\r\n        email: ''\r\n    })\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name] : e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        reset_password(email);\r\n        setRedirect(true);\r\n    }\r\n\r\n    if (redirect) {\r\n        return(\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-2' type='submit'>Continue</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {reset_password_confirm} from '../actions/auth';\r\n\r\nconst ResetPasswordConfirm = ({match,reset_password_confirm}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const [formData , setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    })\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name] : e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRedirect(true);\r\n    }\r\n\r\n    if (redirect) {\r\n        return(\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Reset Password</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-2'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-2' type='submit'>Continue</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem(\"access\"),\r\n    refresh: localStorage.getItem(\"refresh\"),\r\n    isAuthenticated: null,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        \r\n        case AUTHENTICATED_FAIL:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n            \r\n        case GOOGLE_AUTH_FAIL:\r\n        case LOGOUT:\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                access: null\r\n            }\r\n\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n\r\n        case GOOGLE_AUTH_SUCCESS:\r\n            localStorage.setItem('access',payload.access)\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        \r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n        case RESET_PASSWORD_SUCCESS:\r\n        case RESET_PASSWORD_FAIL:\r\n        case RESET_PASSWORD_CONFIRM_SUCCESS:\r\n        case RESET_PASSWORD_CONFIRM_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({auth});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import React from 'react'\r\nimport { BrowserRouter as Router , Route , Switch} from 'react-router-dom'\r\n\r\nimport Layout from './hocs/Layout'\r\n\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login'\r\nimport Signup from './containers/Signup'\r\nimport Activate from './containers/Activate'\r\nimport ResetPassword from './containers/ResetPassword'\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm'\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Route exact path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/reset-password\" component={ResetPassword} />\r\n                        <Route exact path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n                        <Route exact path=\"/activate/:uid/:token\" component={Activate} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}